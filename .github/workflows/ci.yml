name: ci

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        sys:
          - { os: ubuntu-24.04, shell: "bash -el {0}" }
          # TODO: Resolve gtsam build issues on OSX.
          # - { os: macos-14, shell: "bash -el {0}" }
        build_type: [RelWithDebInfo]

    name: ${{ matrix.sys.os }}-${{ matrix.build_type }}
    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        id: pyinstall
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Pre-commit checks
        working-directory: ${{github.workspace}}
        run: pre-commit run --all-files

      - if: runner.os == 'Linux'
        name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt install gcc-14 g++-14 cmake ninja-build libboost-all-dev libeigen3-dev

      - if: runner.os == 'macOS'
        name: Install MacOS dependencies
        run: |
          brew install boost eigen ninja cmake

      - if: runner.os == 'macOS'
        name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install wrenfold
        run: pip install --no-cache-dir wrenfold

      - name: Generate examples
        run: python examples/generate_examples.py

      - name: Create build directory
        run: cmake -E make_directory ${{github.workspace}}/build-${{matrix.build_type}}

      - name: Configure
        working-directory: ${{github.workspace}}/build-${{matrix.build_type}}
        run: |
          cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -Wno-deprecated -G Ninja

      - if: runner.os == 'macOS'
        name: Build (OSX)
        working-directory: ${{github.workspace}}/build-${{matrix.build_type}}
        run: |
          threads=`sysctl -n hw.logicalcpu`
          cmake --build . --config ${{matrix.build_type}} --parallel $threads

      - if: runner.os == 'Linux'
        name: Build (Linux)
        working-directory: ${{github.workspace}}/build-${{matrix.build_type}}
        run: |
          threads=`nproc`
          cmake --build . --config ${{matrix.build_type}} --parallel $threads
